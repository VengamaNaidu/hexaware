What is Maven Life Cycle?
The default Maven lifecycle consists of 8 major steps or phases for compiling, testing, building and installing a given Java project as specified below:
1.	Validate: This step validates if the project structure is correct. For example – It checks if all the dependencies have been downloaded and are available in the local repository.
2.	Compile: It compiles the source code, converts the .java files to .class and stores the classes in target/classes folder.
3.	Test: It runs unit tests for the project.
4.	Package: This step packages the compiled code in distributable format like JAR or WAR.
5.	Integration test: It runs the integration tests for the project.
6.	Verify: This step runs checks to verify that the project is valid and meets the quality standards.
7.	Install: This step installs the packaged code to the local Maven repository.
8.	Deploy: It copies the packaged code to the remote repository for sharing it with other developers.

Maven Commands:
•	mvn clean: Cleans the project and removes all files generated by the previous build.
•	mvn compile: Compiles source code of the project.
•	mvn test-compile: Compiles the test source code.
•	mvn test: Runs tests for the project.
•	mvn package: Creates JAR or WAR file for the project to convert it into a distributable format.
•	mvn install: Deploys the packaged JAR/ WAR file to the local repository.
•	mvn deploy: Copies the packaged JAR/ WAR file to the remote repository after compiling, running tests and building the project.

Describe:
	validate - validate the project is correct and all necessary information is available
	compile - compile the source code of the project
	test - test the compiled source code using a suitable unit testing framework. These tests              should not require the code be packaged or deployed
	package - take the compiled code and package it in its distributable format, such as a JAR.
	verify - run any checks on results of integration tests to ensure quality criteria are met
	install - install the package into the local repository, for use as a dependency in other projects locally
deploy - done in the build environment, copies the final package to the remote repository for sharing with other developers and projects.

What is Web Services?
A web service is a software system that supports interoperable machine-to-machine interaction over a network. It has an interface described in a machine-processable format (specifically, web Service Definition Language, or WSDL). web services fulfill a specific task or a set of tasks.

What is rest controller?
RestController is a Spring annotation that is used to build REST API in a declarative way. RestController annotation is applied to a class to mark it as a request handler, and Spring will do the building and provide the RESTful web service at runtime

.Web Methods:
1: GET :  It requests are the most common and widely used methods in APIs and websites. Simply put, the GET method is used to retreive data from a server at the specified resource. 

2: POST:  In web services, POST requests are used to send data to the API server to create or update a resource. The data sent to the server is stored in the request body of the HTTP request.

3: PUT:  Simlar to POST, PUT requests are used to send data to the API to update or create a resource. The difference is that PUT requests are idempotent. That is, calling the same PUT request multiple times will always produce the same result. In contrast, calling a POST request repeatedly make have side effects of creating the same resource multiple times.

4: DELETE:  The DELETE method is exactly as it sounds: delete the resource at the specified URL. This method is one of the more common in RESTful APIs so it's good to know how it works.
